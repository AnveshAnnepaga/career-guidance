{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANNEPAGA ANVESH\\\\Downloads\\\\project-bolt-sb1-snoa6zdp\\\\springbott\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CourseList from './components/CourseList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userRatings, setUserRatings] = useState({});\n  const [suitableCourses, setSuitableCourses] = useState([]);\n  const [courses, setCourses] = useState([]); // to store all courses\n\n  //  // Fetch all available courses once\n  //  useEffect(() => {\n  //    const fetchAllCourses = async () => {\n  //      try {\n  //        const response = await fetch('http://localhost:8081/api/courses');\n  //        const data = await response.json();\n  //        setCourses(data);\n  //      } catch (error) {\n  //        console.error('Error fetching courses:', error);\n  //      }\n  //    };\n  //\n  //    fetchAllCourses();\n  //  }, []);\n\n  // Fetch recommendations based on user ratings\n  useEffect(() => {\n    const fetchRecommendedCourses = async () => {\n      try {\n        const response = await fetch('http://localhost:8081/api/courses', {\n          method: 'POST',\n          body: JSON.stringify(userRatings),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setSuitableCourses(data);\n        } else {\n          console.error('Response is not an array');\n        }\n      } catch (error) {\n        console.error('Error fetching recommendations:', error);\n      }\n    };\n    if (Object.keys(userRatings).length > 0) {\n      fetchRecommendedCourses();\n    }\n  }, [userRatings]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(CourseList, {\n      courses: courses,\n      userRatings: userRatings,\n      suitableCourses: suitableCourses,\n      onRatingChange: (id, rating) => setUserRatings(prev => ({\n        ...prev,\n        [id]: rating\n      })),\n      onCourseSelect: course => console.log(course)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dA5KlIzwVKP3jkqEam7to6jkEZA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CourseList","jsxDEV","_jsxDEV","App","_s","userRatings","setUserRatings","suitableCourses","setSuitableCourses","courses","setCourses","fetchRecommendedCourses","response","fetch","method","body","JSON","stringify","headers","data","json","Array","isArray","console","error","Object","keys","length","className","children","onRatingChange","id","rating","prev","onCourseSelect","course","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ANNEPAGA ANVESH/Downloads/project-bolt-sb1-snoa6zdp/springbott/project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CourseList from './components/CourseList';\n\nconst App = () => {\n  const [userRatings, setUserRatings] = useState({});\n  const [suitableCourses, setSuitableCourses] = useState([]);\n  const [courses, setCourses] = useState([]); // to store all courses\n\n//  // Fetch all available courses once\n//  useEffect(() => {\n//    const fetchAllCourses = async () => {\n//      try {\n//        const response = await fetch('http://localhost:8081/api/courses');\n//        const data = await response.json();\n//        setCourses(data);\n//      } catch (error) {\n//        console.error('Error fetching courses:', error);\n//      }\n//    };\n//\n//    fetchAllCourses();\n//  }, []);\n\n  // Fetch recommendations based on user ratings\n  useEffect(() => {\n    const fetchRecommendedCourses = async () => {\n      try {\n        const response = await fetch('http://localhost:8081/api/courses', {\n          method: 'POST',\n          body: JSON.stringify(userRatings),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        const data = await response.json();\n\n        if (Array.isArray(data)) {\n          setSuitableCourses(data);\n        } else {\n          console.error('Response is not an array');\n        }\n      } catch (error) {\n        console.error('Error fetching recommendations:', error);\n      }\n    };\n\n    if (Object.keys(userRatings).length > 0) {\n      fetchRecommendedCourses();\n    }\n  }, [userRatings]);\n\n  return (\n    <div className=\"App\">\n      <CourseList\n        courses={courses}\n        userRatings={userRatings}\n        suitableCourses={suitableCourses}\n        onRatingChange={(id, rating) => setUserRatings(prev => ({ ...prev, [id]: rating }))}\n        onCourseSelect={(course) => console.log(course)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,uBAAuB,GAAG,MAAAA,CAAA,KAAY;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UAChEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,WAAW,CAAC;UACjCa,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAElC,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;UACvBX,kBAAkB,CAACW,IAAI,CAAC;QAC1B,CAAC,MAAM;UACLI,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;QAC3C;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAED,IAAIC,MAAM,CAACC,IAAI,CAACrB,WAAW,CAAC,CAACsB,MAAM,GAAG,CAAC,EAAE;MACvChB,uBAAuB,CAAC,CAAC;IAC3B;EACF,CAAC,EAAE,CAACN,WAAW,CAAC,CAAC;EAEjB,oBACEH,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB3B,OAAA,CAACF,UAAU;MACTS,OAAO,EAAEA,OAAQ;MACjBJ,WAAW,EAAEA,WAAY;MACzBE,eAAe,EAAEA,eAAgB;MACjCuB,cAAc,EAAEA,CAACC,EAAE,EAAEC,MAAM,KAAK1B,cAAc,CAAC2B,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACF,EAAE,GAAGC;MAAO,CAAC,CAAC,CAAE;MACpFE,cAAc,EAAGC,MAAM,IAAKZ,OAAO,CAACa,GAAG,CAACD,MAAM;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpC,EAAA,CA5DID,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AA8DT,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}