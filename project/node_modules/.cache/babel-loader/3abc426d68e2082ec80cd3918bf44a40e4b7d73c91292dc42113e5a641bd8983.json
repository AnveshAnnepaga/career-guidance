{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANNEPAGA ANVESH\\\\Downloads\\\\project-bolt-sb1-snoa6zdp\\\\springbott\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SkillForm from './SkillForm';\nimport CourseCard from './CourseCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Function to fetch recommended courses from the backend\n  const fetchRecommendedCourses = async ratings => {\n    setIsLoading(true); // Start loading when fetching starts\n    setError(null); // Reset error state\n\n    try {\n      const response = await fetch('http://localhost:8081/api/recommendations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(ratings)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setCourses(data); // Update the course list with the recommendations\n      } else {\n        setError('Failed to fetch recommendations');\n      }\n    } catch (error) {\n      setError('Error fetching recommendations');\n      console.error(error);\n    } finally {\n      setIsLoading(false); // Stop loading when fetching is done\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Career Guidance App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SkillForm, {\n      onSubmit: fetchRecommendedCourses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading recommendations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommended Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-list\",\n      children: courses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No courses recommended yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : courses.map((course, index) => /*#__PURE__*/_jsxDEV(CourseCard, {\n        course: course\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2EJZ+nTyQ2OnlC0o8Df65gBQ2T8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SkillForm","CourseCard","jsxDEV","_jsxDEV","App","_s","courses","setCourses","isLoading","setIsLoading","error","setError","fetchRecommendedCourses","ratings","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","color","className","length","map","course","index","_c","$RefreshReg$"],"sources":["C:/Users/ANNEPAGA ANVESH/Downloads/project-bolt-sb1-snoa6zdp/springbott/project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SkillForm from './SkillForm';\nimport CourseCard from './CourseCard';\n\nfunction App() {\n  const [courses, setCourses] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Function to fetch recommended courses from the backend\n  const fetchRecommendedCourses = async (ratings) => {\n    setIsLoading(true); // Start loading when fetching starts\n    setError(null); // Reset error state\n\n    try {\n      const response = await fetch('http://localhost:8081/api/recommendations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(ratings),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setCourses(data); // Update the course list with the recommendations\n      } else {\n        setError('Failed to fetch recommendations');\n      }\n    } catch (error) {\n      setError('Error fetching recommendations');\n      console.error(error);\n    } finally {\n      setIsLoading(false); // Stop loading when fetching is done\n    }\n  };\n\n  return (\n    <div>\n      <h1>Career Guidance App</h1>\n\n      {/* Skill Form to collect ratings */}\n      <SkillForm onSubmit={fetchRecommendedCourses} />\n\n      {/* Display error if any */}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {/* Display loading indicator */}\n      {isLoading && <p>Loading recommendations...</p>}\n\n      {/* Display recommended courses */}\n      <h2>Recommended Courses</h2>\n      <div className=\"course-list\">\n        {courses.length === 0 ? (\n          <p>No courses recommended yet.</p>\n        ) : (\n          courses.map((course, index) => (\n            <CourseCard key={index} course={course} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}